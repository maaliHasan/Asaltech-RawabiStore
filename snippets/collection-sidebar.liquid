<!-- /snippets/collection-sidebar.liquid -->
{% comment %}

  Side navigation for the product types, vendors, and tags.
  These can be based on the current collection or all products. Details in comments below.

  Note: Clicking on a tag will filter the products within the current collection.
  Clicking on a type or vendor link will take you out of the current collection
  to a standalone collection page. E.g. /collections/vendors?q=Pepsi

{% endcomment %}
{% comment %}
  A loop to catch and filter out the different tag categories.
  This is mainly for advanced tagging, but will also help us strip
  out any tag categories from our tags (E.g. remove BRAND_ from BRAND_tag)
{% endcomment %}
{% if template.name == 'collection' and collection.all_tags.size > 0 %}
  {% assign categories = '' %}
  {% for tag in collection.all_tags %}
    {% if tag contains '_' %}
       <!-- categories =[brand| style| size] -->
      {% capture categories %}{% unless categories == blank  %}{{ categories }}|{% endunless %}{{ tag | split: '_' | first }}{% endcapture %}
    {% endif %}
  {% endfor %}
  {% assign cat_array = categories | split: '|' | uniq %}
{% endif %}

 {% if collection.all_tags.size > 0 %}

    <div class="grid-uniform">
      {% comment %}
        Loop through tag categories
      {% endcomment %}
      {% for cat_item in cat_array %}
        <div class="grid-item small--one-half medium--one-third large--one-thrid">
          <h2 class="h3">{{ cat_item |t }}</h2>
          <ul class="advanced-filters checkbox-nobullets  ">
            {% comment %}
              Loop through collection tags
            {% endcomment %}
            {% for tag in collection.all_tags %}
              {% assign cat = tag | split: '_' | first %}
              {% if cat != tag and cat_item == cat %}
                {% comment %}
                  Strip out tag category prefix and add/remove link for tag filtering
                {% endcomment %}
                {% if current_tags contains tag %}
                  <li class="advanced-filter active-filter h4" data-group="{{ cat_item   }}" data-handle="{{ tag | handle }}">{{ tag |t | remove_first: cat_item | remove_first: '_' | link_to_remove_tag: tag   }}</li>
                {% else %}
                  <li class="advanced-filter" data-group="{{ cat_item   }}" data-handle="{{ tag | handle }}">{{ tag |t | remove_first: cat_item | remove_first: '_' | link_to_add_tag: tag  }}</li>
                {% endif %}
              {% endif %}
            {% endfor %}
          </ul>
        </div>
      {% endfor %}
    </div>

    <script>
    $(function() {
      var filters = $('.advanced-filter'),
        el,
        elGroup,
        elHandle,
        activeTagInGroup;

      filters.on('click', function(e) {
        el = $(this);
        elGroup = el.data('group');
        elHandle = el.data('handle');
        activeTagInGroup = $('.active-filter[data-group="'+ elGroup +'"]');
        // If the tag clicked is not already active and its group contains an active tag, we will swap tag within the group.
        if ( !el.hasClass('active-filter')  && activeTagInGroup.size() ) {
          e.preventDefault();
          location.href = location.href
            // swap tag
            .replace(activeTagInGroup.data('handle'), elHandle)
            // go back to page 1
            .replace(/(&page=\d+)|(page=\d+&)|(\?page=\d+$)/, '');
        }
      });
    });
    </script>
{%endif %}
{% comment %}
  Product tags in the current collection

{% if template contains 'collection' and collection.all_tags.size > 1 %}
  
  <!-- A recursive loop to catch and filter out the different tag categories -->
  {% assign c = 0 %} 
  {% for t in collection.all_tags %}
  {% capture cat %}{{ cat }}{% capture temp_cat %}{% if t contains '_' %}{% assign cat_grp = t | split: '_' %}{{ cat_grp.first }}{% endif %}{% endcapture %}{% unless cat contains temp_cat %}{% if t contains '_' %}{% assign new_cat_grp = t | split: '_' %}{{ new_cat_grp.first }}{% endif %}{% unless forloop.last %}+{% endunless %}{% assign c = c | plus: 1 %}{% endunless %}{% endcapture %}
  {% endfor %}
	
  <!-- cat_grp contain [brand,_,buma,_,brand,_,nike,_,color]   -->
  <!-- temp_cat contain cat_grp.first [brand ,color, style] -->
  
  <!-- current_tags  contain all the collection  tags -->
  <!-- cat contain array of [brand+color+size]-->
  <!-- cat_array array of tag categories[brand color size]  -->
  <!--  t    brand_buma brand_nike color_pinkcolor_Red -->
  
  <!-- create array of tag categories -->
  {% assign cat_array = cat | split: '+' %}
  
  <!-- loop through tag categories -->  
  {% for i in cat_array %}
  <!-- ignore if tag category is empty -->  
  {% unless i == '' %}
  <h5>{{ i |t }}</h5>
  <ul class="no-bullets " >
    <!-- loop through collection tags -->  
	  {% for t in collection.all_tags %}
	  <!-- if tag contains the category title -->
	  {% if t contains i %}
	  <!-- strip out tag category prefix and add/remove link for tag filtering -->
	  
	  <li><input  class=" coll-filter"type="checkbox"  id="{{ t | handle }}" value="{{ t | handle }}" selected>{{ t| t }}</li>
	 
	   
	  
	  {% endif %}
	  {% endfor %}
  </ul>
  {% endunless %}
  {% endfor %}
  
  {% endif %}
     
<script>
  /* Product Tag Filters - Good for any number of filters on any type of collection pages */
  $( window ).load(function() {
    
      sessionStorage.clear();
    
          });
   var checkboxValues = JSON.parse(sessionStorage.getItem('checkboxValues')) || {};
  var collFilters = jQuery('.coll-filter');
 
  collFilters.change(function() {
   
    var newTags = [];
    collFilters.each(function() {
       
      if (jQuery(this).val()) {
        checkboxValues[this.id] = this.checked;
        newTags.push(jQuery(this).val());
        
      }
    });
    
     sessionStorage.setItem("checkboxValues", JSON.stringify(checkboxValues));
    var size = newTags.length;
   console.log(newTags);
    if (newTags.length) {
      for (var i=0 ;i<size;i++){
        var query = newTags[i];
        if(document.getElementById(query).checked){
          window.location.href = jQuery('{{ 'tag' | link_to_add_tag: 'tag' }}').attr('href').replace('tag', query);
     
         
                                       } 
               
                                        } }
  else {
      {% if collection.handle %}
      window.location.href = '/collections/{{ collection.handle }}';
      {% elsif collection.products.first.type == collection.title %}
      window.location.href = '{{ collection.title | url_for_type }}';
      {% elsif collection.products.first.vendor == collection.title %}
      window.location.href = '{{ collection.title | url_for_vendor }}';
      {% endif %}
    } 
  });
          
            $.each(checkboxValues, function(key, value) {
               var test =$("#" + key);
             //  alert(test);
                  $("#" + key).prop('checked', value);
});  
</script>
{% endcomment %}
  
 