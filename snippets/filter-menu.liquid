     {% if template contains 'collection' and collection.all_tags.size > 1 %}
  
              <!-- A recursive loop to catch and filter out the different tag categories -->
              {% assign Ac = 0 %} 
              {% for At in collection.all_tags %}
 
              {% capture Acat %}{{ Acat }}{% capture Atemp_cat %}{% if At contains '_' %}{% assign Acat_grp = At | split: '_' %}{{ Acat_grp.first }}{% endif %}{% endcapture %}{% unless Acat contains Atemp_cat %}{% if At contains '_' %}{% assign Anew_cat_grp = At | split: '_' %}{{ Anew_cat_grp.first }}{% endif %}{% unless forloop.last %}+{% endunless %}{% assign Ac = Ac | plus: 1 %}{% endunless %}{% endcapture %}
              {% endfor %}

              <!-- create array of tag categories -->
              {% assign Acat_array = Acat | split: '+' %}


              <!-- loop through tag categories -->  
              {% for Ai in Acat_array %}
              <!-- ignore if tag category is empty -->  
 
              {% unless Ai == '' %}
            <ul class="mainmenu">
               
              <li><h5>  {{ Ai |t }}</h5>
                <ul class="submenu">
                       <!-- loop through collection tags -->  
                  {% for At in collection.all_tags %}
                  <!-- if tag contains the category title -->
                  {% if At contains Ai %}
                  <!-- strip out tag category prefix and add/remove link for tag filtering 
                  <li><input  class="Bcoll-filter"type="checkbox"  id="{{ At | handle }}" value="{{ At | handle }}" selected>{{ At| t }}</li>-->
                  {% assign final_tag2 = At | remove: Ai | remove: '_'   %}
                  <li>{{ final_tag2|t | link_to_add_tag: At }}</li>
                  {% endif %}
                  {% endfor %}
                </ul>
              </li>
              
            </ul>
             {% endunless %}
              {% endfor %}

              {% endif %}
             
                 
<script>
  /* Product Tag Filters - Good for any number of filters on any type of collection pages */
  var collFilters = jQuery('.Bcoll-filter');
 
  collFilters.change(function() {
   
    var newTags = [];
    collFilters.each(function() {
       
      if (jQuery(this).val()) {
      
        newTags.push(jQuery(this).val());
        
      }
    });
    
    
    var size = newTags.length;
   console.log(newTags);
    if (newTags.length) {
      for (var i=0 ;i<size;i++){
        var query = newTags[i];
        if(document.getElementById(query).checked){
          window.location.href = jQuery('{{ 'tag' | link_to_add_tag: 'tag' }}').attr('href').replace('tag', query);
     
         
                                       } 
               
                                        } }
  else {
      {% if collection.handle %}
      window.location.href = '/collections/{{ collection.handle }}';
      {% elsif collection.products.first.type == collection.title %}
      window.location.href = '{{ collection.title | url_for_type }}';
      {% elsif collection.products.first.vendor == collection.title %}
      window.location.href = '{{ collection.title | url_for_vendor }}';
      {% endif %}
    } 
  });
</script>


        
                {% comment %} 
                {% endcomment %}
                         